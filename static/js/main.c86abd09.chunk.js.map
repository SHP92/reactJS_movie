{"version":3,"sources":["movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","cover","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","this","movie","medium_cover_image","getMovies","axios","get","data","setState","React","Component","ReactDOM","render","document","getElementById"],"mappings":"yRAiCeA,MA7Bf,YAA4D,EAA3CC,GAA4C,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,OAC9C,OACI,yBAAKC,UAAU,SACX,yBAAKC,IAAMH,EAAQI,IAAMN,EAAQA,MAAQA,IACzC,yBAAKI,UAAU,cACX,wBAAIA,UAAU,eAAd,IAA+BJ,EAA/B,KACA,wBAAII,UAAU,cAAd,IAA8BL,EAA9B,KACA,wBAAIK,UAAU,gBACRD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACT,wBAAIL,UAAU,cAAcM,IAAMD,GAC5BD,OAId,0BAAMJ,UAAU,iBAAhB,IAAmCH,EAAQU,MAAM,EAAG,KAApD,W,iBCkJDC,G,iNAvBbC,MAAQ,CACNC,WAAY,EACVC,OAAS,I,wEA5BH,IAAD,EACuBC,KAAKH,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OAInB,OACE,yBAAKX,UAAU,aACXU,EACA,yBAAKV,UAAU,WAAf,eACA,yBAAKA,UAAU,UAAf,IACEW,EAAOR,KAAI,SAAAU,GAAK,OACd,kBAAC,EAAD,CACEP,IAAKO,EAAMnB,GAAIA,GAAImB,EAAMnB,GACzBC,KAAMkB,EAAMlB,KACZC,MAAOiB,EAAMjB,MACbC,QAASgB,EAAMhB,QACfC,MAAOe,EAAMC,mBACbf,OAAQc,EAAMd,gB,0CAmB1Ba,KAAKG,c,sIAOwCC,IAAMC,IAAI,2C,gBAA7BN,E,EAAlBO,KAASA,KAASP,OAE1BC,KAAKO,SAAS,CAAER,OAASA,EAAQD,WAAY,I,sDA9C/BU,IAAMC,YC9GxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c86abd09.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './movie.css';\r\n\r\nfunction Movie({ id, year, title, summary, cover, genres }) {\r\n    return (\r\n        <div className='movie'>\r\n            <img src={ cover } alt={ title } title={ title } />\r\n            <div className='movie_data'>\r\n                <h3 className='movie_title'> { title } </h3>\r\n                <h4 className='movie_year'> { year } </h4>\r\n                <ul className='movie_genres'> \r\n                    { genres.map((genre, index) => (\r\n                        <li className='movie_genre' key={ index }> \r\n                            { genre } \r\n                        </li>\r\n                    ))} \r\n                </ul>\r\n                <span className='movie_summary'> { summary.slice(0, 200) }... </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nMovie.propTypes = {\r\n    id : PropTypes.number.isRequired\r\n    , year : PropTypes.number.isRequired\r\n    , title : PropTypes.string.isRequired\r\n    , summary : PropTypes.string.isRequired\r\n    , cover : PropTypes.string.isRequired\r\n    , genres : PropTypes.arrayOf(PropTypes.string).isRequired\r\n}\r\n\r\nexport default Movie;","import React from 'react';\nimport MyComponent from './MyComponent'; // 3. import component\nimport Movie from './movie';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\nimport './App.css';\n\n// prop-types help to reduce mistakes by checking args' types\n\n// function Food(props) {\n//   console.log(props); // props.name = { name }\n//   return (\n//     <div>\n//       <h1> My favorite Food is { props.name } </h1>\n//       <img src={ props.pic } alt={ props.name }/>\n//       {/* img element should have 'alt' prop */}\n//     </div>\n//   );\n// }\n\n// // type check (restricted)\n// Food.propTypes = {\n//   name: PropTypes.string.isRequired // isRequired = 필수\n//   , pic : PropTypes.string.isRequired\n//   , rating : PropTypes.number // should be 'number' or undefined\n// }\n\n// const foodILike = [\n//   { \n//     id: 1\n//     , name : \"strawberry\" \n//     , img : \"https://phlabs.com/Content/Images/uploaded/Strawberry.jpg\"\n//     , rating : 4\n//   }, { \n//     id : 2\n//     , name : \"macaron\" \n//     , img : \"https://sugargeekshow.com/wp-content/uploads/2018/01/french-macaron-recipe.jpg\"\n//     , rating : 3.5\n//   }, { \n//     id : 3\n//     , name : \"mandarin\"\n//     , img : \"http://newdia.linkfile.kr/product/essentialoil/mandarin.jpg\" \n//     , rating : 4.5\n//   }, { \n//     id : 4\n//     , name : \"grapefruit\"\n//     , img : \"https://www.pittmandavis.com/blog/wp-content/uploads/2018/04/iStock-606020846-575x262.jpg\" \n//     , rating : 5\n//   }\n// ];\n\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <MyComponent /> {/* 4. use component */}\n      \n//       {/* <Food \n//         fruit=\"strawberry\"\n//         dessert=\"macaron\"\n//       /> */}\n\n//       {/* \n//         ==Dynamic Component Generation==\n//         Array.map(function) -> return array\n//         like for each in js...\n//         'function(args){ return }' == 'args => ()'\n//       */}\n//       {/* \n//         using {} if use js in middle of react\n//       */}\n//       {/* \n//         all react components requires unique 'key'\n//         -> that's why use id\n//       */}\n//       { foodILike.map(function(args) {\n//         return <Food key={args.id} name={args.name} pic={args.img}/>\n//       }) }\n\n//     </div>\n//   );\n// }\n\n// class App extends React.Component {\n//   // class component에서 화면에 표시하려면 render() 사용\n//   // constructor() -> render() -> componentDidMount() -> render() -> componentDidUpdate() -> ...unmount...\n//   render() {\n//   return (\n//     <div>\n//       <h1> class component { this.state.count } </h1>\n//       <button onClick={ this.add }> add </button>\n//       <button onClick={ this.minus }> minus </button>\n//     </div>\n//   );}\n\n//   // state : object with 'dynamic' data -> that's why use class!!!\n//   // do not change state directlry : use setState()\n//   state = {\n//     count : 0\n//   }\n\n//  // js fuction\n//  // use arrow function = () => {}\n//  // or have to bind event : this.add.bind(this)\n//   add = () => {\n//     // setState() : update state and refresh reder()\n//     // this.setState({ count : this.state.count + 1});\n//     this.setState(current => ({ count : current.count + 1}));\n//   }\n//   minus = () => {\n//     // this.setState({ count : this.state.count - 1});\n//     this.setState(current => ({ count : current.count - 1}));\n//   }\n// }\n\nclass App extends React.Component {\n  render() {\n    const { isLoading, movies } = this.state;\n    //const isLoading = this.state.isLoading;\n    //const movies = this.state.movies;\n    \n    return (\n      <div className='container'>\n        { isLoading ? \n          <div className='loading'> \"Loading\" </div> : (\n          <div className='movies'> {\n            movies.map(movie => ( \n              <Movie \n                key={movie.id} id={movie.id} \n                year={movie.year} \n                title={movie.title} \n                summary={movie.summary} \n                cover={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </div>\n    );\n  }\n\n  state = {\n    isLoading : true\n    , movies : []\n  };\n\n  componentDidMount() {\n    // setTimeout( () => {\n    //   this.setState({ isLoading : false })\n    // }, 3000);\n\n    this.getMovies();\n  }\n\n  // wait! until loading... asyncronize : async - await\n  async getMovies() {\n    // const movies = await axios.get('https://yts.lt/api/v2/list_movies.json');\n    // console.log(movies.data.data.movies);\n    const { data : { data : { movies }}} = await axios.get('https://yts.lt/api/v2/list_movies.json');\n\n    this.setState({ movies : movies, isLoading : false }) // this.setState({ movies });\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// ** can render only 1 component, \n// so push your custom component into 'App'\n "],"sourceRoot":""}